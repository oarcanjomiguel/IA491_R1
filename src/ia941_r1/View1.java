/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ia941_r1;


import java.util.ArrayList;
import java.util.List;
import ws3dproxy.CommandExecException;
import ws3dproxy.WS3DProxy;
import ws3dproxy.model.Creature;
import ws3dproxy.model.World;
import ws3dproxy.model.WorldPoint;
import java.util.concurrent.ThreadLocalRandom;
import ws3dproxy.model.Thing;

/**
 *
 * @author miguel.marques
 */
public class View1 extends javax.swing.JFrame {

    /**
     * Creates new form View1
     */
    public View1() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbDificuldade = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txRobo = new javax.swing.JTextArea();
        bSair = new javax.swing.JButton();
        bHorario = new javax.swing.JButton();
        bAntihorario = new javax.swing.JButton();
        bFrente = new javax.swing.JButton();
        bRe = new javax.swing.JButton();
        bParar = new javax.swing.JButton();
        bVisao = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cbObjetos = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IA941_R1");

        cbDificuldade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fácil", "Médio", "Difícil" }));

        jLabel1.setText("Dificuldade do mundo:");

        jButton1.setText("Gerar mundo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txRobo.setEditable(false);
        txRobo.setColumns(20);
        txRobo.setLineWrap(true);
        txRobo.setRows(5);
        jScrollPane1.setViewportView(txRobo);

        bSair.setText("Sair");
        bSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSairActionPerformed(evt);
            }
        });

        bHorario.setText("Sentido Horário");
        bHorario.setEnabled(false);
        bHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHorarioActionPerformed(evt);
            }
        });

        bAntihorario.setText("Sentido Anti-horário");
        bAntihorario.setEnabled(false);
        bAntihorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAntihorarioActionPerformed(evt);
            }
        });

        bFrente.setText("Para Frente");
        bFrente.setEnabled(false);
        bFrente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFrenteActionPerformed(evt);
            }
        });

        bRe.setText("Marcha Ré");
        bRe.setEnabled(false);
        bRe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReActionPerformed(evt);
            }
        });

        bParar.setText("Parar");
        bParar.setEnabled(false);
        bParar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPararActionPerformed(evt);
            }
        });

        bVisao.setText("Objetos à vista");
        bVisao.setEnabled(false);
        bVisao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVisaoActionPerformed(evt);
            }
        });

        jButton2.setText("Capturar objeto");

        cbObjetos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Objetos a vista" }));
        cbObjetos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbObjetosActionPerformed(evt);
            }
        });

        jButton3.setText("Esconder");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("<Bolsa vazia!>");
        jScrollPane2.setViewportView(jTextArea1);

        jLabel2.setText("Mensagens:");

        jLabel3.setText("Conteúdo da bolsa:");

        jLabel4.setText("Status do robô:");

        jLabel5.setText("Movimentação do robô:");

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("<Robô inexistente>");
        jScrollPane4.setViewportView(jTextArea3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbDificuldade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(456, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bVisao)
                                .addGap(27, 27, 27)
                                .addComponent(cbObjetos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(bRe, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bSair))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(112, 112, 112)
                                        .addComponent(bFrente))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bHorario)
                                        .addGap(18, 18, 18)
                                        .addComponent(bParar)
                                        .addGap(18, 18, 18)
                                        .addComponent(bAntihorario))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(213, 213, 213)
                                        .addComponent(jButton2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton3)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDificuldade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bVisao)
                    .addComponent(cbObjetos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton3)))
                .addGap(27, 27, 27)
                .addComponent(bFrente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAntihorario)
                    .addComponent(bHorario)
                    .addComponent(bParar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bRe)
                    .addComponent(bSair))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //classes
//<editor-fold defaultstate="collapsed" desc="exemplo struct">
    /* class Employee {
       private String name;
       private int code;

   // constructor
   public Employee(String name, int code) {
      this.name = name;
      this.code = code;
   }

       // getter
       public String getName() { return name; }
       public int getCode() { return code; }
       // setter

       public void setName(String name) { this.name = name; }
       public void setCode(int code) { this.code = code; }
    }
    
    Employee[] arr = new Employee[100];  // new stands for create an array object
    arr[0] = new Employee("Peter", 100); // new stands for create an employee object
    arr[1] = new Employee("Mary", 90);
    */
    //</editor-fold>
    class Obstaculo
    {
        private int Cor;
        private int X1;
        private int Y1;
        private int X2;
        private int Y2;
        
        //construtor
        public Obstaculo(int Cor, int X1, int Y1, int X2, int Y2)
        {
            this.Cor = Cor;
            this.X1 = X1;
            this.Y1 = Y1;
            this.X2 = X2;
            this.Y2 = Y2;
        }
        
        //getter
        public int getCor() { return Cor; }
        public int getX1() { return X1; }
        public int getY1() { return Y1; }
        public int getX2() { return X2; }
        public int getY2() { return Y2; }
        
        //setter
        public void setCor( int Cor) { this.Cor = Cor; }
        public void setX1(int X1) { this.X1 = X1; }
        public void setY1(int Y1) { this.Y1 = Y1;}
        public void setX2(int X2) { this.X2 = X2;}
        public void setY2(int Y2) { this.Y2 = Y2;}
                
    }
    
    //constantes
    int tamanhoBrick = 100;
    int Xmax = 800;
    int Ymax = 600;
    String[] TipoComida = {"perecível", "não perecível"};
    String[] CorObstaculo = {"vermelho", "verde", "azul", "amarelo", "magenta", "branco"};
    String[] CorJoia = {"vermelha", "verde", "azul", "amarela", "magenta", "branca"};
    String[] TipoObjeto = {" ", "obstáculo", "comida", "jóia", "ponto de troca", "gaiola"};
    
    //Variaveis globais
    WS3DProxy proxy = new WS3DProxy();
    World mundo = World.getInstance();
    Obstaculo[] Obstaculos = new Obstaculo[3];
    Creature criatura;
        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
try {   
     mundo.reset();
     int dificuldade = cbDificuldade.getSelectedIndex();
     int randomX;
     int randomY;
     
     //criacao do mundo a partir do indice da dificuldade do combobox
     //criacao dos obstaculos
     for(int i =0; i<= dificuldade; i++)
     {
         randomX = ThreadLocalRandom.current().nextInt(0, Xmax);
         randomY = ThreadLocalRandom.current().nextInt(0, Ymax);
         int randomColor = ThreadLocalRandom.current().nextInt(0, CorObstaculo.length);
         World.createBrick(randomColor, randomX, randomY, randomX+tamanhoBrick, randomY+tamanhoBrick);
         Obstaculos[i] = new Obstaculo(randomColor, randomX, randomY, randomX+tamanhoBrick, randomY+tamanhoBrick);
         txRobo.append("Obstáculo " + CorObstaculo[randomColor] + " criado em: " + randomX + ", " + randomY+ "\n");
     }
     
     //ciacao das comidas
     for(int i=0;i<5-dificuldade;i++)
     {
         randomX = ThreadLocalRandom.current().nextInt(0, Xmax);
         randomY = ThreadLocalRandom.current().nextInt(0, Ymax);
         int randomTipo = ThreadLocalRandom.current().nextInt(0, TipoComida.length);
         World.createFood(randomTipo, randomX, randomY);
         txRobo.append("Comida " + TipoComida[randomTipo] + " criado em: " + randomX + ", " + randomY+ "\n");
         
     }
     
    //ciacao das joias
     for(int i=0;i<5-dificuldade;i++)
     {
         randomX = ThreadLocalRandom.current().nextInt(0, Xmax);
         randomY = ThreadLocalRandom.current().nextInt(0, Ymax);
         int randomTipo = ThreadLocalRandom.current().nextInt(0, CorJoia.length);
         World.createJewel(randomTipo, randomX, randomY);
         txRobo.append("Jóia " + CorJoia[randomTipo] + " criado em: " + randomX + ", " + randomY+ "\n");
     }
     
     //criacao de gaiola
     randomX = ThreadLocalRandom.current().nextInt(0, Xmax);
     randomY = ThreadLocalRandom.current().nextInt(0, Ymax);
     World.createCage(randomX, randomY);
     txRobo.append("Gaiola criada em: " + randomX + ", " + randomY+"\n");
     
     //criacao do delivery spot
     randomX = ThreadLocalRandom.current().nextInt(0, Xmax);
     randomY = ThreadLocalRandom.current().nextInt(0, Ymax);
     World.createDeliverySpot(randomX, randomY);
     txRobo.append("Ponto de troca criado em: " + randomX + ", " + randomY+"\n");
     
     //criacao do robo
     randomX = ThreadLocalRandom.current().nextInt(0, Xmax);
     randomY = ThreadLocalRandom.current().nextInt(0, Ymax);
     criatura = proxy.createCreature(randomX, randomY, 0);
     txRobo.append("Robo criado em: " + randomX + ", " + randomY + "\n");
     criatura.start();
     
     bFrente.setEnabled(true);
     bRe.setEnabled(true);
     bHorario.setEnabled(true);
     bAntihorario.setEnabled(true);
     bParar.setEnabled(true);
     bVisao.setEnabled(true);
     
     //WorldPoint position = c.getPosition();
     //double pitch = c.getPitch();
     //double fuel = c.getFuel();
     //c.moveto(1, 250, 210);
    } catch (CommandExecException e) {
     System.out.println("Erro capturado");
    }
    }//GEN-LAST:event_jButton1ActionPerformed
    private String retornaObjeto(int classe)
    {
        if(classe<6) //brick, joia, delivery spot, gaiola
        {
            return(TipoObjeto[classe]);
        }
        if(classe==21)
        {
            return("comida perecível");
        }
        if(classe==22)
        {
            return("comda não perecível");
        }
         
        return("invalido");
    }
            
    private void bSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bSairActionPerformed

    private void bFrenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFrenteActionPerformed
        try
        {
            criatura.start();
            criatura.move(1, 1, 0);
        }
        catch (CommandExecException e ){ txRobo.append("Erro ao tentar movimentar robo\n"); }
                
    }//GEN-LAST:event_bFrenteActionPerformed

    private void bReActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReActionPerformed
        try
        {
            criatura.start();
            criatura.move(-1, -1, 0);
        }
        catch (CommandExecException e ){ txRobo.append("Erro ao tentar movimentar robo\n"); }
    }//GEN-LAST:event_bReActionPerformed

    private void bHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHorarioActionPerformed
        try
        {
            criatura.start();
            criatura.rotate(1);
        }
        catch (CommandExecException e ){ txRobo.append("Erro ao tentar movimentar robo\n"); }
    }//GEN-LAST:event_bHorarioActionPerformed

    private void bAntihorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAntihorarioActionPerformed
        try
        {
            criatura.start();
            criatura.rotate(-1);
        }
        catch (CommandExecException e ){ txRobo.append("Erro ao tentar movimentar robo\n"); }
    }//GEN-LAST:event_bAntihorarioActionPerformed

    private void bVisaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVisaoActionPerformed
        criatura.updateState();
        List<Thing> coisas = criatura.getThingsInVision();
        cbObjetos.removeAllItems();
        txRobo.append("Coisas à vista:\n");
        coisas.forEach((coisa) -> {
            String nome = retornaObjeto(coisa.getCategory());
            String descricao = nome + " "+coisa.getAttributes().getColor() +" em " + coisa.getX1() + ", "+ coisa.getX2();
            cbObjetos.addItem(descricao);
            txRobo.append( descricao +"\n");
        });
        
        
        /*
        Categorias:
        1 - Brick
        2X- Comida
            21 - comida perecivel
            22 - comida nao perecivel
        3 - Jewel
        4 - Delivery spot
        5 - Gaiola
        */
    }//GEN-LAST:event_bVisaoActionPerformed

    private void bPararActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPararActionPerformed
       try
        {
            criatura.stop();
            
        }
        catch (CommandExecException e ){ txRobo.append("Erro ao tentar movimentar robo\n"); }
    }//GEN-LAST:event_bPararActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cbObjetosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbObjetosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbObjetosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAntihorario;
    private javax.swing.JButton bFrente;
    private javax.swing.JButton bHorario;
    private javax.swing.JButton bParar;
    private javax.swing.JButton bRe;
    private javax.swing.JButton bSair;
    private javax.swing.JButton bVisao;
    private javax.swing.JComboBox<String> cbDificuldade;
    private javax.swing.JComboBox<String> cbObjetos;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea txRobo;
    // End of variables declaration//GEN-END:variables
}
